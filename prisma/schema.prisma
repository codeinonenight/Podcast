// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model PodcastSession {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  // Input data
  originalUrl String
  platform    String
  
  // Processing status
  status      String @default("PENDING")
  currentStep String?
  progress    Int              @default(0)
  error       String?
  
  // Extracted data
  audioUrl    String?
  audioSize   Int?
  audioDuration Float?
  audioFormat String?
  
  // Metadata
  title       String?
  description String?
  author      String?
  publishDate DateTime?
  thumbnail   String?
  duration    Float?
  chapters    String?
  
  // Analysis results
  transcription String?
  transcriptionLanguage String?
  transcriptionConfidence Float?
  
  summary     String?
  topics      String?
  mindmap     String?
  insights    String?
  
  // Chat sessions
  chatSessions ChatSession[]
  
  @@map("podcast_sessions")
}

model ChatSession {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  podcastSessionId String
  podcastSession   PodcastSession @relation(fields: [podcastSessionId], references: [id], onDelete: Cascade)
  
  messages String?
  
  @@map("chat_sessions")
}

// enum ProcessingStatus {
//   PENDING
//   EXTRACTING_AUDIO
//   TRANSCRIBING
//   ANALYZING
//   COMPLETED
//   FAILED
// }

model ProcessingJob {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  
  sessionId   String   @unique
  status      String @default("PENDING")
  currentStep String?
  progress    Int      @default(0)
  error       String?
  
  // Job metadata
  startedAt   DateTime?
  completedAt DateTime?
  duration    Int? // in seconds
  
  @@map("processing_jobs")
} 